    {% for method in methods %}
    /**
     * @testdox Have a method ``{{ method }}()``. {{method.summary}}
     * @cover ::{{ method }}
     * @dataProvider dataProvider{{ classShortName }}
     * @test
     * @param {{ classShortName }} ${{ objectShortName }}
     */
    public function test{{ method | capitalize }}({{ classShortName }} ${{ objectShortName }})
    {
        $this->markTestIncomplete('{{ method }}() incomplete!');
    }
    {% endfor %}

    {% for method in magic_methods %}

    /**
     * @testdox Have a getter ``{{ method.getter }}()`` to get {{ method.case }}
     * @dataProvider dataProvider{{ classShortName }}
     * @small
     * @test
     */
    public function testGet{{ method.case }}({{ classShortName }} ${{ objectShortName }}, $expected = null)
    {
        $this->assertSchemaGetter('{{ method.name }}', '{{ method.type }}', ${{ objectShortName }}, $expected);
    }

    /**
     * @testdox Have a setter ``{{ method.setter }}()`` to set {{ method.case }}
     * @dataProvider dataProvider{{ classShortName }}
     * @small
     * @test
     */
    public function testSet{{ method.case }}({{ classShortName }} ${{ objectShortName }}, $expected = null)
    {
        $this->assertSchemaSetter('{{ method.name }}', '{{ method.type }}', ${{ objectShortName }});
    }
    {% endfor %}
